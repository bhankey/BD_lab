// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReportDebtorsResponse report debtors response
//
// swagger:model ReportDebtorsResponse
type ReportDebtorsResponse []*ReportDebtorsResponseItems0

// Validate validates this report debtors response
func (m ReportDebtorsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this report debtors response based on the context it is used
func (m ReportDebtorsResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if m[i] != nil {
			if err := m[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ReportDebtorsResponseItems0 report debtors response items0
//
// swagger:model ReportDebtorsResponseItems0
type ReportDebtorsResponseItems0 struct {

	// account id
	AccountID int64 `json:"account_id"`

	// debt sum
	DebtSum float64 `json:"debt_sum"`

	// income
	Income float64 `json:"income"`

	// outgo
	Outgo float64 `json:"outgo"`
}

// Validate validates this report debtors response items0
func (m *ReportDebtorsResponseItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this report debtors response items0 based on context it is used
func (m *ReportDebtorsResponseItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReportDebtorsResponseItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportDebtorsResponseItems0) UnmarshalBinary(b []byte) error {
	var res ReportDebtorsResponseItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
